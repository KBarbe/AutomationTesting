// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace AutomationTesting.CodedUIMaps.SaveAs_UIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class SaveAs_UIMap
    {
        
        #region Properties
        public SaveAsWindow SaveAsWindow
        {
            get
            {
                if ((this.mSaveAsWindow == null))
                {
                    this.mSaveAsWindow = new SaveAsWindow();
                }
                return this.mSaveAsWindow;
            }
        }
        #endregion
        
        #region Fields
        private SaveAsWindow mSaveAsWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SaveAsWindow : WinWindow
    {
        
        public SaveAsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Save As";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public SaveAsAddress SaveAsAddress
        {
            get
            {
                if ((this.mSaveAsAddress == null))
                {
                    this.mSaveAsAddress = new SaveAsAddress(this);
                }
                return this.mSaveAsAddress;
            }
        }
        
        public FileName FileName
        {
            get
            {
                if ((this.mFileName == null))
                {
                    this.mFileName = new FileName(this);
                }
                return this.mFileName;
            }
        }
        
        public Save Save
        {
            get
            {
                if ((this.mSave == null))
                {
                    this.mSave = new Save(this);
                }
                return this.mSave;
            }
        }
        
        public Cancel Cancel
        {
            get
            {
                if ((this.mCancel == null))
                {
                    this.mCancel = new Cancel(this);
                }
                return this.mCancel;
            }
        }
        #endregion
        
        #region Fields
        private SaveAsAddress mSaveAsAddress;
        
        private FileName mFileName;
        
        private Save mSave;
        
        private Cancel mCancel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SaveAsAddress : WinWindow
    {
        
        public SaveAsAddress(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1001";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinToolBar SaveAsAddress_bar
        {
            get
            {
                if ((this.mSaveAsAddress_bar == null))
                {
                    this.mSaveAsAddress_bar = new WinToolBar(this);
                    #region Search Criteria
                    this.mSaveAsAddress_bar.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mSaveAsAddress_bar;
            }
        }
        #endregion
        
        #region Fields
        private WinToolBar mSaveAsAddress_bar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileName : WinWindow
    {
        
        public FileName(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1001";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinEdit FileName_txt
        {
            get
            {
                if ((this.mFileName_txt == null))
                {
                    this.mFileName_txt = new WinEdit(this);
                    #region Search Criteria
                    this.mFileName_txt.SearchProperties[WinEdit.PropertyNames.Name] = "File name:";
                    this.mFileName_txt.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mFileName_txt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mFileName_txt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Save : WinWindow
    {
        
        public Save(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinButton Save_btn
        {
            get
            {
                if ((this.mSave_btn == null))
                {
                    this.mSave_btn = new WinButton(this);
                    #region Search Criteria
                    this.mSave_btn.SearchProperties[WinButton.PropertyNames.Name] = "Save";
                    this.mSave_btn.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mSave_btn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mSave_btn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Cancel : WinWindow
    {
        
        public Cancel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinButton Cancel_btn
        {
            get
            {
                if ((this.mCancel_btn == null))
                {
                    this.mCancel_btn = new WinButton(this);
                    #region Search Criteria
                    this.mCancel_btn.SearchProperties[WinButton.PropertyNames.Name] = "Cancel";
                    this.mCancel_btn.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mCancel_btn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mCancel_btn;
        #endregion
    }
}
